ext {
    versions = [
            support         : "26.0.2",
            kotlin          : "1.1.3-2",
            constraintLayout: "1.0.2",
            okHttp          : "3.8.1",
            retrofit        : '2.3.0',
            rxJava2         : '2.1.1',
            rxAndroid2      : '2.0.1',
            dagger          : '2.11',
            butterKnife     : '8.8.1',
            gson            : '2.8.1',
            glide           : '3.8.0',
            timber          : '4.5.1',
            parcler         : '1.1.9',
            leakCanary      : "1.5",

            espresso        : '3.0.1',
            espressoRunner  : '1.0.1',
            hamcrest        : '1.3',
            restMock        : '0.2.2',
            mockito         : '2.8.47',
            junit           : '4.12',
            robolectric     : '3.4',
            assertj         : '1.1.1'

    ]

    supportDeps = [
            appcompatV7     : "com.android.support:appcompat-v7:$versions.support",
            design          : "com.android.support:design:$versions.support",
            //cardView   : "com.android.support:cardview-v7:$versions.support",
            annotations     : 'com.android.support:support-annotations:22.2.0',
            constraintLayout: "com.android.support.constraint:constraint-layout:$versions.constraintLayout"
    ]

    kotlin = [
            kotlinStdLib: "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    ]

    rxJava = [
            rxJava2   : "io.reactivex.rxjava2:rxjava:$versions.rxJava2",
            rxAndroid2: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid2"
    ]

    retrofit = [
            retrofit     : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter2   : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            gsonConverter: "com.squareup.retrofit2:converter-gson:$versions.retrofit",
    ]

    okHttp = [
            logger: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp: "com.squareup.okhttp3:okhttp:$versions.okHttp"
    ]

    stetho = [
            stetho     : 'com.facebook.stetho:stetho:1.5.0',
            stethoRealm: 'com.uphyca:stetho_realm:2.1.0'
    ]

    misc = [
            //multidex   : "com.android.support:multidex:1.0.1",
            gson       : "com.google.code.gson:gson:$versions.gson",
            timber     : "com.jakewharton.timber:timber:$versions.timber",
            butterKnife: "com.jakewharton:butterknife:$versions.butterKnife",
            //dagger     : "com.google.dagger:dagger:$versions.dagger",
            //glide      : "com.github.bumptech.glide:glide:$versions.glide",
            //parcler    : "org.parceler:parceler-api:$versions.parcler"
//            leakCanary : "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakCanary"
    ]

    annotationProcess = [
            butterknife: "com.jakewharton:butterknife-compiler:$versions.butterKnife",
            //parcler    : "org.parceler:parceler:$versions.parcler",
            //dagger     : "com.google.dagger:dagger-compiler:$versions.dagger",
    ]

    mockito = [mockito: "org.mockito:mockito-core:2.8.9"]
    junit = [junit: "junit:junit:4.12"]
    //restMock = [restMock: "com.github.andrzejchm.RESTMock:android:$versions.restMock"]

    unitTest = [
            harcrestCore       : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib       : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration: "org.hamcrest:hamcrest-integration:$versions.hamcrest",
            supportAnnotation  : "com.android.support:support-annotations:$versions.support",
            assertj            : "com.squareup.assertj:assertj-android:1.1.1",
    ] + junit + mockito //+ restMock

    androidTests = [
            espressoCore   : "com.android.support.test.espresso:espresso-core:$versions.espresso",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:$versions.espresso",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:$versions.espresso",
            testRunner     : "com.android.support.test:runner:$versions.espressoRunner",
            testRules      : "com.android.support.test:rules:$versions.espressoRunner",
    ] + mockito //+ restMock

    supportLibs = supportDeps.values()
    kotlinLibs = kotlin.values()
    networkLibs = retrofit.values() + okHttp.values()
    rxJavaLibs = rxJava.values()
    stethoLibs = stetho.values()
    //googlePlayLibs = googlePlay.values()
    miscLibs = misc.values()
    unitTestLibs = unitTest.values()
    androidTestsLibs = androidTests.values() + supportLibs
    annotationProcessLibs = annotationProcess.values()

    leakCanaryDebug = "com.squareup.leakcanary:leakcanary-android:$versions.leakCanary"
    leakCanaryRelease = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakCanary"
    daggerCompiler = "com.google.dagger:dagger-compiler:$versions.dagger"
}